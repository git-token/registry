'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = validateContract;

var _bluebird = require('bluebird');

var _bluebird2 = _interopRequireDefault(_bluebird);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* babel-plugin-inline-import 'gittoken-contracts/build/contracts/GitToken.json' */var GitTokenContract = '{\n  "contract_name": "GitToken",\n  "abi": [\n    {\n      "constant": true,\n      "inputs": [],\n      "name": "name",\n      "outputs": [\n        {\n          "name": "_name",\n          "type": "string"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": false,\n      "inputs": [\n        {\n          "name": "_spender",\n          "type": "address"\n        },\n        {\n          "name": "_value",\n          "type": "uint256"\n        }\n      ],\n      "name": "approve",\n      "outputs": [\n        {\n          "name": "",\n          "type": "bool"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": true,\n      "inputs": [],\n      "name": "totalSupply",\n      "outputs": [\n        {\n          "name": "_supply",\n          "type": "uint256"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": false,\n      "inputs": [\n        {\n          "name": "_from",\n          "type": "address"\n        },\n        {\n          "name": "_to",\n          "type": "address"\n        },\n        {\n          "name": "_value",\n          "type": "uint256"\n        }\n      ],\n      "name": "transferFrom",\n      "outputs": [\n        {\n          "name": "",\n          "type": "bool"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": true,\n      "inputs": [],\n      "name": "organization",\n      "outputs": [\n        {\n          "name": "_organization",\n          "type": "string"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": true,\n      "inputs": [],\n      "name": "decimals",\n      "outputs": [\n        {\n          "name": "_decimals",\n          "type": "uint256"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": true,\n      "inputs": [\n        {\n          "name": "_holder",\n          "type": "address"\n        }\n      ],\n      "name": "balanceOf",\n      "outputs": [\n        {\n          "name": "_balance",\n          "type": "uint256"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": true,\n      "inputs": [],\n      "name": "data",\n      "outputs": [\n        {\n          "name": "totalSupply",\n          "type": "uint256"\n        },\n        {\n          "name": "decimals",\n          "type": "uint256"\n        },\n        {\n          "name": "name",\n          "type": "string"\n        },\n        {\n          "name": "organization",\n          "type": "string"\n        },\n        {\n          "name": "symbol",\n          "type": "string"\n        },\n        {\n          "name": "registry",\n          "type": "address"\n        },\n        {\n          "name": "username",\n          "type": "string"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": true,\n      "inputs": [],\n      "name": "symbol",\n      "outputs": [\n        {\n          "name": "_symbol",\n          "type": "string"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": false,\n      "inputs": [\n        {\n          "name": "_to",\n          "type": "address"\n        },\n        {\n          "name": "_value",\n          "type": "uint256"\n        }\n      ],\n      "name": "transfer",\n      "outputs": [\n        {\n          "name": "",\n          "type": "bool"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": true,\n      "inputs": [\n        {\n          "name": "_owner",\n          "type": "address"\n        },\n        {\n          "name": "_spender",\n          "type": "address"\n        }\n      ],\n      "name": "allowance",\n      "outputs": [\n        {\n          "name": "_allowance",\n          "type": "uint256"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": false,\n      "inputs": [\n        {\n          "name": "_contributor",\n          "type": "address"\n        },\n        {\n          "name": "_value",\n          "type": "uint256"\n        }\n      ],\n      "name": "credit",\n      "outputs": [\n        {\n          "name": "success",\n          "type": "bool"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "inputs": [\n        {\n          "name": "_organization",\n          "type": "string"\n        },\n        {\n          "name": "_name",\n          "type": "string"\n        },\n        {\n          "name": "_symbol",\n          "type": "string"\n        },\n        {\n          "name": "_decimals",\n          "type": "uint256"\n        },\n        {\n          "name": "_registry",\n          "type": "address"\n        },\n        {\n          "name": "_admin",\n          "type": "address"\n        },\n        {\n          "name": "_username",\n          "type": "string"\n        }\n      ],\n      "payable": false,\n      "type": "constructor"\n    },\n    {\n      "payable": false,\n      "type": "fallback"\n    },\n    {\n      "anonymous": false,\n      "inputs": [\n        {\n          "indexed": true,\n          "name": "owner",\n          "type": "address"\n        },\n        {\n          "indexed": true,\n          "name": "spender",\n          "type": "address"\n        },\n        {\n          "indexed": false,\n          "name": "value",\n          "type": "uint256"\n        }\n      ],\n      "name": "Approval",\n      "type": "event"\n    },\n    {\n      "anonymous": false,\n      "inputs": [\n        {\n          "indexed": true,\n          "name": "from",\n          "type": "address"\n        },\n        {\n          "indexed": true,\n          "name": "to",\n          "type": "address"\n        },\n        {\n          "indexed": false,\n          "name": "value",\n          "type": "uint256"\n        }\n      ],\n      "name": "Transfer",\n      "type": "event"\n    },\n    {\n      "anonymous": false,\n      "inputs": [\n        {\n          "indexed": true,\n          "name": "contributor",\n          "type": "address"\n        },\n        {\n          "indexed": false,\n          "name": "value",\n          "type": "uint256"\n        }\n      ],\n      "name": "Credited",\n      "type": "event"\n    }\n  ],\n  "unlinked_binary": "0x6060604052341561000f57600080fd5b604051610cb7380380610cb78339810160405280805182019190602001805182019190602001805182019190602001805191906020018051919060200180519190602001805190910190505b60008055600184905560028680516100779291602001906100fc565b50600387805161008b9291602001906100fc565b50600485805161009f9291602001906100fc565b5060058054600160a060020a031916600160a060020a038581169190911790915582166000908152600760205260409020805460ff1916600117905560068180516100ee9291602001906100fc565b505b5050505050505061019c565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061013d57805160ff191683800117855561016a565b8280016001018555821561016a579182015b8281111561016a57825182559160200191906001019061014f565b5b5061017792915061017b565b5090565b61019991905b808211156101775760008155600101610181565b5090565b90565b610b0c806101ab6000396000f300606060405236156100b75763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100ca578063095ea7b31461015557806318160ddd1461018b57806323b872dd146101b057806323bd4d7a146101ec578063313ce5671461027757806370a082311461029c57806373d4a13a146102cd57806395d89b41146104f9578063a9059cbb14610584578063dd62ed3e146105ba578063ef6506db146105f1575b34156100c257600080fd5b5b600080fd5b005b34156100d557600080fd5b6100dd610627565b60405160208082528190810183818151815260200191508051906020019080838360005b8381101561011a5780820151818401525b602001610101565b50505050905090810190601f1680156101475780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561016057600080fd5b610177600160a060020a03600435166024356106cf565b604051901515815260200160405180910390f35b341561019657600080fd5b61019e610789565b60405190815260200160405180910390f35b34156101bb57600080fd5b610177600160a060020a0360043581169060243516604435610790565b604051901515815260200160405180910390f35b34156101f757600080fd5b6100dd6107f6565b60405160208082528190810183818151815260200191508051906020019080838360005b8381101561011a5780820151818401525b602001610101565b50505050905090810190601f1680156101475780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561028257600080fd5b61019e6108a0565b60405190815260200160405180910390f35b34156102a757600080fd5b61019e600160a060020a03600435166108a7565b60405190815260200160405180910390f35b34156102d857600080fd5b6102e06108c6565b60405187815260208101879052600160a060020a03831660a082015260e060408201818152875460026001821615610100908102600019019092160492840183905290916060840191608085019160c08601918601908b9080156103855780601f1061035a57610100808354040283529160200191610385565b820191906000526020600020905b81548152906001019060200180831161036857829003601f168201915b505085810384528954600260001961010060018416150201909116048082526020909101908a9080156103f95780601f106103ce576101008083540402835291602001916103f9565b820191906000526020600020905b8154815290600101906020018083116103dc57829003601f168201915b505085810383528854600260001961010060018416150201909116048082526020909101908990801561046d5780601f106104425761010080835404028352916020019161046d565b820191906000526020600020905b81548152906001019060200180831161045057829003601f168201915b50508581038252865460026000196101006001841615020190911604808252602090910190879080156104e15780601f106104b6576101008083540402835291602001916104e1565b820191906000526020600020905b8154815290600101906020018083116104c457829003601f168201915b50509b50505050505050505050505060405180910390f35b341561050457600080fd5b6100dd6108e6565b60405160208082528190810183818151815260200191508051906020019080838360005b8381101561011a5780820151818401525b602001610101565b50505050905090810190601f1680156101475780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561058f57600080fd5b610177600160a060020a0360043516602435610990565b604051901515815260200160405180910390f35b34156105c557600080fd5b61019e600160a060020a03600435811690602435166109e3565b60405190815260200160405180910390f35b34156105fc57600080fd5b610177600160a060020a0360043516602435610a10565b604051901515815260200160405180910390f35b61062f610ace565b6002805460001961010060018316150201168190046020601f820181900481020160405190810160405280929190818152602001828054600181600116156101000203166002900480156106c45780601f10610699576101008083540402835291602001916106c4565b820191906000526020600020905b8154815290600101906020018083116106a757829003601f168201915b505050505090505b90565b60006002366044146106e057600080fd5b821580156107115750600160a060020a03338116600090815260086020908152604080832093881683529290522054155b151561071c57600080fd5b600160a060020a03338116600081815260086020908152604080832094891680845294909152908190208690557f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259086905190815260200160405180910390a3600191505b5b5092915050565b6000545b90565b60006003366064146107a157600080fd5b83600160a060020a031685600160a060020a03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8560405190815260200160405180910390a3600191505b5b509392505050565b6107fe610ace565b60038054600260001961010060018416150201909116046020601f820181900481020160405190810160405280929190818152602001828054600181600116156101000203166002900480156106c45780601f10610699576101008083540402835291602001916106c4565b820191906000526020600020905b8154815290600101906020018083116106a757829003601f168201915b505050505090505b90565b6001545b90565b600160a060020a0381166000908152600960205260409020545b919050565b600054600154600554600290600390600490600160a060020a0316600687565b6108ee610ace565b60048054600260001961010060018416150201909116046020601f820181900481020160405190810160405280929190818152602001828054600181600116156101000203166002900480156106c45780601f10610699576101008083540402835291602001916106c4565b820191906000526020600020905b8154815290600101906020018083116106a757829003601f168201915b505050505090505b90565b600082600160a060020a031633600160a060020a03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405190815260200160405180910390a35060015b92915050565b600160a060020a038083166000908152600860209081526040808320938516835292905220545b92915050565b60055460009033600160a060020a03908116911614610a2e57600080fd5b600160a060020a038316600090815260096020526040902054610a57908363ffffffff610ab416565b50600054610a6b908363ffffffff610ab416565b5082600160a060020a03167f9c9e0cdb1670e88302408e5b941dc636f63a3293204694bb68910fcf3d9305f38360405190815260200160405180910390a25060015b5b92915050565b600082820183811015610ac357fe5b8091505b5092915050565b602060405190810160405260008152905600a165627a7a72305820f9b4fbbe828141a2ceb31341b81c3ea6291170d7f530e463fde11d44221441710029",\n  "networks": {},\n  "schema_version": "0.0.5",\n  "updated_at": 1509658172789\n}';

var _JSON$parse = JSON.parse(GitTokenContract),
    abi = _JSON$parse.abi;

function validateContract(_ref) {
  var _this = this;

  var address = _ref.address;

  return new _bluebird2.default(function (resolve, reject) {
    var contract = _this.web3.eth.contract(abi).at(address);
    // console.log('address', address)
    (0, _bluebird.join)(contract.getRewardDetails.call('milestone', 'closed'), contract.name.call(), contract.organization.call(), contract.decimals.call(), contract.symbol.call()).then(function (details) {
      console.log('details', details);
      var decimals = details[3].toNumber();

      // TODO: Better validation for GitToken Contract
      if (details[0][0].toNumber() * Math.pow(10, decimals) != 250 || details[0][1].toNumber() * Math.pow(10, decimals) != 40000) {
        reject(new Error('\n          Invalid GitToken Contract!\n          getRewardDetails returned unexepected result\n        '));
      } else {
        resolve({
          address: address,
          decimals: decimals,
          name: details[1].toString(),
          organization: details[2].toString(),
          symbol: details[4].toString(),
          date: new Date().getTime()
        });
      }
    }).catch(function (error) {
      reject(error);
    });
  });
}